"""remove freemium features

Revision ID: a1726ed21cef
Revises: efa035b1f5e8
Create Date: 2025-06-16 08:59:28.420862+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a1726ed21cef'
down_revision: Union[str, None] = 'efa035b1f5e8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    columns = [col["name"] for col in inspector.get_columns("users")]
    # Use batch operations for SQLite compatibility
    with op.batch_alter_table('users') as batch_op:
        try:
            batch_op.drop_index(op.f('ix_users_is_premium'))
        except Exception:
            pass
        try:
            batch_op.drop_index(op.f('ix_users_last_ad_watch_timestamp'))
        except Exception:
            pass
        try:
            batch_op.drop_index(op.f('ix_users_remaining_free_turns'))
        except Exception:
            pass
        # Drop check constraints before dropping the column
        try:
            batch_op.drop_constraint('check_remaining_free_turns_non_negative', type_='check')
        except Exception:
            pass
        try:
            batch_op.drop_constraint('check_remaining_free_turns_max', type_='check')
        except Exception:
            pass
        if 'last_ad_watch_timestamp' in columns:
            batch_op.drop_column('last_ad_watch_timestamp')
        if 'is_premium' in columns:
            batch_op.drop_column('is_premium')
        if 'remaining_free_turns' in columns:
            batch_op.drop_column('remaining_free_turns')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('remaining_free_turns', sa.INTEGER(), server_default=sa.text("'3'"), nullable=True))
    op.add_column('users', sa.Column('is_premium', sa.BOOLEAN(), nullable=True))
    op.add_column('users', sa.Column('last_ad_watch_timestamp', sa.DATETIME(), nullable=True))
    op.create_index(op.f('ix_users_remaining_free_turns'), 'users', ['remaining_free_turns'], unique=False)
    op.create_index(op.f('ix_users_last_ad_watch_timestamp'), 'users', ['last_ad_watch_timestamp'], unique=False)
    op.create_index(op.f('ix_users_is_premium'), 'users', ['is_premium'], unique=False)
    # ### end Alembic commands ###
